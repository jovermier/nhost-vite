events {
    worker_connections 1024;
}

http {
    # Basic MIME types
    include /etc/nginx/mime.types;
    default_type application/octet-stream;

    # Gzip compression
    gzip on;
    gzip_types text/plain text/css application/json application/javascript text/xml application/xml text/javascript;

    # Define upstream servers for each Nhost service
    upstream hasura {
        server local.hasura.local.nhost.run:443;
    }

    upstream auth {
        server local.auth.local.nhost.run:443;
    }

    upstream storage {
        server local.storage.local.nhost.run:443;
    }

    upstream dashboard {
        server local.dashboard.local.nhost.run:443;
    }

    upstream functions {
        server local.functions.local.nhost.run:443;
    }

    upstream mailhog {
        server local.mailhog.local.nhost.run:443;
    }

    # Hasura proxy server on port 8081
    server {
        listen 8081;
        server_name _;

        location / {
            proxy_pass https://hasura;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_set_header Host local.hasura.local.nhost.run;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_redirect off;

            proxy_pass_request_headers on;
            proxy_buffering off;
        }
    }

    # Auth proxy server on port 8082
    server {
        listen 8082;
        server_name _;

        location / {
            proxy_pass https://auth;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_set_header Host local.auth.local.nhost.run;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_redirect off;

            proxy_pass_request_headers on;
            proxy_buffering off;
        }
    }

    # Storage proxy server on port 8083
    server {
        listen 8083;
        server_name _;

        location / {
            proxy_pass https://storage;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_set_header Host local.storage.local.nhost.run;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_redirect off;

            proxy_pass_request_headers on;
            proxy_buffering off;
        }
    }

    # Dashboard proxy server on port 8084
    server {
        listen 8084;
        server_name _;

        # Handle direct requests to hasura from dashboard
        location ~ ^/http://local\.hasura\.local\.nhost\.run:443/(.*)$ {
            proxy_pass https://hasura/$1$is_args$args;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_set_header Host local.hasura.local.nhost.run;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
        }

        location / {
            proxy_pass https://dashboard;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_set_header Host local.dashboard.local.nhost.run;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";

            proxy_redirect off;

            proxy_pass_request_headers on;
            proxy_buffering off;
        }
    }


    # Functions proxy server on port 8085
    server {
        listen 8085;
        server_name _;

        location / {
            proxy_pass https://functions;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_set_header Host local.functions.local.nhost.run;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            proxy_redirect http://local.functions.local.nhost.run/ /;
            sub_filter 'http://local.functions.local.nhost.run' '/';
            sub_filter_once off;
            sub_filter_types text/css application/javascript text/javascript application/json;
        }
    }

    # Mailhog proxy server on port 8086
    server {
        listen 8086;
        server_name _;

        location / {
            proxy_pass https://mailhog;
            proxy_ssl_verify off;
            proxy_ssl_server_name on;
            proxy_set_header Host local.mailhog.local.nhost.run;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # WebSocket support
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            
            # More conservative URL rewriting
            proxy_redirect http://local.mailhog.local.nhost.run/ /;
            proxy_redirect https://local.mailhog.local.nhost.run/ /;
            
            # Only replace specific domain references, not partial matches
            sub_filter 'http://local.mailhog.local.nhost.run/' '/';
            sub_filter 'https://local.mailhog.local.nhost.run/' '/';
            sub_filter '"http://local.mailhog.local.nhost.run"' '"/"';
            sub_filter '"https://local.mailhog.local.nhost.run"' '"/"';
            sub_filter_once off;
            sub_filter_types text/css application/javascript text/javascript application/json;
            
            # Preserve original headers for better compatibility
            proxy_pass_request_headers on;
            proxy_buffering off;
        }
    }
}
